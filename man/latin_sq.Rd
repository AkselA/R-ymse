% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/latin_square.R
\name{latin_sq}
\alias{latin_sq}
\title{Latin square}
\usage{
latin_sq(n, random = TRUE, reduce = TRUE)
}
\arguments{
\item{n}{integer; number of unique values (aka. symbols)}

\item{random}{logical; should the square be generated randomly?}

\item{reduce}{logical; should the square be in reduced form?}
}
\value{
A square integer matrix of size n^2
}
\description{
Generate latin squares, either randomly or ordered
}
\details{
Computation time increses rapidly with \code{n}. On my computer generating a
random square with \code{n=12} takes about ten minutes, marking the upper 
limit of practicability, or even stretching it a little.
A latin square in \code{reduced} form will have elements in the first row
and the first column in a sorted order. By setting \code{reduced=TRUE} the first
row and the first column will always be \code{1:n}.
}
\examples{
set.seed(1)
ls <- latin_sq(9, reduce=TRUE)
image(ls, col=randcolours(ncol(ls)))

# The more "classic" representation with latin capital letters
ls[] <- LETTERS[ls]
ls
}
\seealso{
\code{\link{indexvalue}}
}
